package com.model.config;

import org.springframework.batch.item.file.FlatFileItemReader;
import org.springframework.batch.item.file.LineMapper;
import org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;
import org.springframework.batch.item.file.mapping.DefaultLineMapper;
import org.springframework.batch.item.file.transform.DelimitedLineTokenizer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.ClassPathResource;

import com.model.entity.Employee;

@Configuration

public class EmployeeBatchConfig {

	
	@Bean  
	public FlatFileItemReader<Employee> readEmployeeCsv() {  
	    FlatFileItemReader<Employee> employeeCsvReader = new FlatFileItemReader<>();  
	    employeeCsvReader.setResource(new ClassPathResource("data.csv"));  
	    employeeCsvReader.setName("EmployeeCsvReader");  
	    employeeCsvReader.setLinesToSkip(1);  
	    employeeCsvReader.setLineMapper(lineMapper());  
	    return employeeCsvReader;  
	}  
	  
	private LineMapper<Employee> lineMapper() {  
	    DefaultLineMapper<Employee> lineMapper = new DefaultLineMapper<>();  
	  
	    DelimitedLineTokenizer lineTokenizer = new DelimitedLineTokenizer();  
	    lineTokenizer.setDelimiter(",");  
	    lineTokenizer.setStrict(false);  
	    lineTokenizer.setNames("employeeId", "name", "salary");  
	  
	    BeanWrapperFieldSetMapper<Employee> fieldSetMapper = new BeanWrapperFieldSetMapper<>();  
	    fieldSetMapper.setTargetType(Employee.class);  
	  
	    lineMapper.setLineTokenizer(lineTokenizer);  
	    lineMapper.setFieldSetMapper(fieldSetMapper);  
	  
	    return lineMapper;  
	}

}
